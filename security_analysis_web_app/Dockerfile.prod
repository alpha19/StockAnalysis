# BUILDER #
###########

# pull official base image
FROM python:3.7-alpine as builder

# set work directory
RUN mkdir /security_analysis_web_app
WORKDIR /security_analysis_web_app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev openssl-dev libffi-dev libxslt-dev libxml2-dev linux-headers g++

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
# For style guide enhancement, uncomment line below
# RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /security_analysis_web_app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.7-alpine

# create directory for the app user
RUN mkdir /security_analysis_web_app

# create the security_analysis_web_app user
RUN addgroup -S security_analysis_web_app && adduser -S security_analysis_web_app -G security_analysis_web_app

# create the appropriate directories
ENV HOME=/security_analysis_web_app
ENV APP_HOME=/security_analysis_web_app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq linux-headers g++
COPY --from=builder /security_analysis_web_app/wheels /wheels
COPY --from=builder /security_analysis_web_app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R security_analysis_web_app:security_analysis_web_app $APP_HOME

# change to the app user
USER security_analysis_web_app

# run entrypoint.prod.sh
ENTRYPOINT ["/security_analysis_web_app/web/entrypoint.prod.sh"]